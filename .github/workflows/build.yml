name: Build

on:
  push:
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Cache conda
      id: cache-conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yml') }}

    - name: Setup conda, install dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: anaconda-client-env
        channel-priority: strict
        environment-file: environment.yml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Test with pytest, generate coverage report
      run: |
        $CONDA/envs/anaconda-client-env/bin/pytest -s --cov=./rcwa --cov-report xml --cov-config=.coveragerc

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        $CONDA/envs/anaconda-client-env/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        $CONDA/envs/anaconda-client-env/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Upload coverage report to codecov
      uses: codecov/codecov-action@v1
      with: 
        token: ${{ secrets.codecov_token }}
        files: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true

    - name: Build python package
      run:
        $CONDA/bin/python setup.py sdist bdist_wheel

    - name: Deploy to test PyPi
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.test_pypi_token }}
        repository_url: https://test.pypi.org/legacy/
        verbose: true

    - name: Download and install from TestPyPi
      run:
        $CONDA/envs/anaconda-client-env/bin/pip install --index-url https://test.pypi.org/simple --extra-index-url https://pypi.org/simple rcwa;

    - name: Show where rcwa is located
      run:
        $CONDA/envs/anaconda-client-env/bin/pip show rcwa;

    - name: Run testPyPi test suite
      run: 
        $CONDA/envs/anaconda-client-env/bin/pytest $CONDA/envs/anaconda-client-env/lib/python3.9/site-packages/rcwa/

    - name: Deploy to PyPi
      uses: pypa/gh-action-pypi-publish@master
      if: github.ref == 'refs/heads/master'
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
        verbose: true

    - name: Download aand install from PyPi
      run: 
        $CONDA/envs/anaconda-client-env/bin/pip uninstall -y rcwa;
        $CONDA/envs/anaconda-client-env/bin/pip install rcwa;

    - name: Run PyPi test suite
      run: 
        $CONDA/envs/anaconda-client-env/bin/pytest $CONDA/envs/anaconda-client-env/lib/python3.9/site-packages/rcwa/
