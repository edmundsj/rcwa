{"ast":null,"code":"import { Children, cloneElement } from \"react\";\nimport { isTabPanel, isTab, isTabList } from \"./elementTypes\";\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, function (child) {\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === \"object\") {\n      return cloneElement(child, Object.assign({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, function (child) {\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === \"object\") {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}","map":{"version":3,"names":["Children","cloneElement","isTabPanel","isTab","isTabList","isTabChild","child","deepMap","children","callback","map","props","Object","assign","deepForEach","forEach"],"sources":["/home/foglet15/Code/Python/rcwa/node_modules/react-tabs/esm/helpers/childrenDeepMap.js"],"sourcesContent":["import{Children,cloneElement}from\"react\";import{isTabPanel,isTab,isTabList}from\"./elementTypes\";function isTabChild(child){return isTab(child)||isTabList(child)||isTabPanel(child)}export function deepMap(children,callback){return Children.map(children,function(child){if(child===null)return null;if(isTabChild(child)){return callback(child)}if(child.props&&child.props.children&&typeof child.props.children===\"object\"){return cloneElement(child,Object.assign({},child.props,{children:deepMap(child.props.children,callback)}))}return child})}export function deepForEach(children,callback){return Children.forEach(children,function(child){if(child===null)return;if(isTab(child)||isTabPanel(child)){callback(child)}else if(child.props&&child.props.children&&typeof child.props.children===\"object\"){if(isTabList(child))callback(child);deepForEach(child.props.children,callback)}})}"],"mappings":"AAAA,SAAOA,QAAP,EAAgBC,YAAhB,QAAiC,OAAjC;AAAyC,SAAOC,UAAP,EAAkBC,KAAlB,EAAwBC,SAAxB,QAAsC,gBAAtC;;AAAuD,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAC,OAAOH,KAAK,CAACG,KAAD,CAAL,IAAcF,SAAS,CAACE,KAAD,CAAvB,IAAgCJ,UAAU,CAACI,KAAD,CAAjD;AAAyD;;AAAA,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA0BC,QAA1B,EAAmC;EAAC,OAAOT,QAAQ,CAACU,GAAT,CAAaF,QAAb,EAAsB,UAASF,KAAT,EAAe;IAAC,IAAGA,KAAK,KAAG,IAAX,EAAgB,OAAO,IAAP;;IAAY,IAAGD,UAAU,CAACC,KAAD,CAAb,EAAqB;MAAC,OAAOG,QAAQ,CAACH,KAAD,CAAf;IAAuB;;IAAA,IAAGA,KAAK,CAACK,KAAN,IAAaL,KAAK,CAACK,KAAN,CAAYH,QAAzB,IAAmC,OAAOF,KAAK,CAACK,KAAN,CAAYH,QAAnB,KAA8B,QAApE,EAA6E;MAAC,OAAOP,YAAY,CAACK,KAAD,EAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,KAAK,CAACK,KAAvB,EAA6B;QAACH,QAAQ,EAACD,OAAO,CAACD,KAAK,CAACK,KAAN,CAAYH,QAAb,EAAsBC,QAAtB;MAAjB,CAA7B,CAAP,CAAnB;IAA2G;;IAAA,OAAOH,KAAP;EAAa,CAArT,CAAP;AAA8T;AAAA,OAAO,SAASQ,WAAT,CAAqBN,QAArB,EAA8BC,QAA9B,EAAuC;EAAC,OAAOT,QAAQ,CAACe,OAAT,CAAiBP,QAAjB,EAA0B,UAASF,KAAT,EAAe;IAAC,IAAGA,KAAK,KAAG,IAAX,EAAgB;;IAAO,IAAGH,KAAK,CAACG,KAAD,CAAL,IAAcJ,UAAU,CAACI,KAAD,CAA3B,EAAmC;MAACG,QAAQ,CAACH,KAAD,CAAR;IAAgB,CAApD,MAAyD,IAAGA,KAAK,CAACK,KAAN,IAAaL,KAAK,CAACK,KAAN,CAAYH,QAAzB,IAAmC,OAAOF,KAAK,CAACK,KAAN,CAAYH,QAAnB,KAA8B,QAApE,EAA6E;MAAC,IAAGJ,SAAS,CAACE,KAAD,CAAZ,EAAoBG,QAAQ,CAACH,KAAD,CAAR;MAAgBQ,WAAW,CAACR,KAAK,CAACK,KAAN,CAAYH,QAAb,EAAsBC,QAAtB,CAAX;IAA2C;EAAC,CAAxR,CAAP;AAAiS"},"metadata":{},"sourceType":"module"}