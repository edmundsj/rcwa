{"ast":null,"code":"var _jsxFileName = \"/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/src/components/ControlColumn.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport LatticeVectorsControl from \"./LatticeVectorsControl\";\nimport LayerCard from \"./LayerCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlColumn() {\n  _s();\n\n  const [layers, setLayers] = useState([{\n    name: \"Reflection Layer\",\n    hasCrystal: false,\n    ur: 1,\n    er: 1,\n    thickness: 0.0,\n    n: 0.0,\n    material: \"\",\n    latticeVectors: []\n  }, {\n    name: \"Transmission Layer\",\n    hasCrystal: false,\n    ur: 1,\n    er: 1,\n    thickness: 0.0,\n    n: 0.0,\n    material: \"\",\n    latticeVectors: []\n  }]);\n\n  const addLayer = () => {\n    var newLayer = {\n      name: `Layer ${layers.length - 1}`,\n      hasCrystal: false,\n      ur: 1,\n      er: 1,\n      thickness: 0.0,\n      n: 0.0,\n      material: \"\",\n      is3D: true,\n      latticeVectors: []\n    };\n    var newLayers = [...layers];\n    newLayers.splice(layers.length - 1, 0, newLayer);\n    setLayers(newLayers);\n  };\n\n  const removeLayer = () => {\n    if (layers.length === 2) {\n      return;\n    }\n\n    layers.splice(layers.length - 2, 1);\n    setLayers([...layers]);\n  };\n\n  const updateLayerProp = (idx, prop, newValue) => {\n    console.log(`called to update layer ${idx}, prop ${prop} to value ${newValue}`);\n\n    switch (prop) {\n      case \"hasCrystal\":\n        layers[idx].hasCrystal = newValue;\n        break;\n\n      case \"ur\":\n        layers[idx].ur = newValue;\n        break;\n\n      case \"er\":\n        layers[idx].er = newValue;\n        break;\n\n      case \"thickness\":\n        layers[idx].thickness = newValue;\n        break;\n\n      case \"n\":\n        layers[idx].n = newValue;\n        break;\n\n      case \"material\":\n        layers[idx].material = newValue;\n        break;\n\n      case \"latticeVectors\":\n        layers[idx].latticeVectors = newValue;\n        break;\n\n      default:\n        console.log(\"received invalid value to update\");\n    }\n\n    setLayers([...layers]);\n  };\n\n  var addLatticeVector = idx => {\n    var layer = layers[idx];\n\n    if (layer.latticeVectors.length >= 3) {\n      return;\n    }\n\n    let newVs = [...layer.latticeVectors];\n    newVs.push([0, 0, 0]);\n    layer.latticeVectors = newVs;\n    layers[idx] = layer;\n    setLayers([...layers]);\n  };\n\n  var set3Dimensions = (status, idx) => {\n    var layer = layers[idx];\n    layer.is3D = status;\n    layers[idx] = layers;\n    setLayers([...layers]);\n  };\n\n  var removeLatticeVector = () => {\n    var layer = layers[idx];\n\n    if (layer.latticeVectors.length <= 0) {\n      return;\n    }\n\n    let newVs = [...latticeVectors];\n    newVs.pop();\n    layer.latticeVectors = newVs;\n    setLayers([...layers]);\n  };\n\n  var modifyVector = (vectorIdx, component, event) => {\n    var layer = layers[idx];\n    layer.latticeVectors[vectorIdx][component] = event.target.value;\n    layers[idx] = layer;\n    setLayers([...layers]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controlColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layerControl\",\n      children: layers.map((elem, idx) => /*#__PURE__*/_jsxDEV(LayerCard, {\n        layer: elem,\n        updateLayerProp: updateLayerProp,\n        isOnEnds: idx == 0 || idx == layers.length - 1,\n        idx: idx\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"pink\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-end\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"controlBtns\",\n        onClick: addLayer,\n        children: \"Add Layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"controlBtns\",\n        onClick: removeLayer,\n        children: \"Remove Layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ControlColumn, \"T8X9gLBVT/u3rVughS1lfCm/vC4=\");\n\n_c = ControlColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlColumn\");","map":{"version":3,"names":["useState","LatticeVectorsControl","LayerCard","ControlColumn","layers","setLayers","name","hasCrystal","ur","er","thickness","n","material","latticeVectors","addLayer","newLayer","length","is3D","newLayers","splice","removeLayer","updateLayerProp","idx","prop","newValue","console","log","addLatticeVector","layer","newVs","push","set3Dimensions","status","removeLatticeVector","pop","modifyVector","vectorIdx","component","event","target","value","map","elem","background","display","flexDirection","alignItems"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/src/components/ControlColumn.js"],"sourcesContent":["import { useState } from \"react\"\nimport LatticeVectorsControl from \"./LatticeVectorsControl\";\nimport LayerCard from \"./LayerCard\";\n\nexport default function ControlColumn(){\n\n    const [layers, setLayers] = useState([\n        {\n            name: \"Reflection Layer\",\n            hasCrystal: false,\n            ur: 1,\n            er: 1,\n            thickness: 0.0,\n            n: 0.0,\n            material: \"\",\n            latticeVectors:[]\n        },\n        {\n            name: \"Transmission Layer\",\n            hasCrystal: false,\n            ur: 1,\n            er: 1,\n            thickness: 0.0,\n            n: 0.0,\n            material: \"\",\n            latticeVectors:[]\n        }\n    ])\n\n    const addLayer = () => {\n        var newLayer = {\n            name: `Layer ${layers.length-1}`,\n            hasCrystal: false,\n            ur: 1,\n            er: 1,\n            thickness: 0.0,\n            n: 0.0,\n            material: \"\",\n            is3D: true,\n            latticeVectors: []\n        }\n        var newLayers = [...layers]\n        newLayers.splice(layers.length-1, 0, newLayer)\n        setLayers(newLayers)\n    }\n\n    const removeLayer = () => {\n        if(layers.length === 2){\n            return;\n        }\n        layers.splice(layers.length-2,1)\n        setLayers([...layers])\n    }\n\n    const updateLayerProp = (idx, prop, newValue) => {\n        console.log(`called to update layer ${idx}, prop ${prop} to value ${newValue}`)\n        switch(prop){\n            case \"hasCrystal\":\n                layers[idx].hasCrystal = newValue\n                break;\n            case \"ur\":\n                layers[idx].ur = newValue\n                break;\n            case \"er\":\n                layers[idx].er = newValue\n                break;\n            case \"thickness\":\n                layers[idx].thickness = newValue\n                break;\n            case \"n\":\n                layers[idx].n = newValue\n                break;\n            case \"material\":\n                layers[idx].material = newValue\n                break;\n            case \"latticeVectors\":\n                layers[idx].latticeVectors = newValue\n                break;\n            default:\n                console.log(\"received invalid value to update\")\n        }\n        setLayers([...layers])\n    }    \n\n    var addLatticeVector = (idx) => {\n        var layer = layers[idx]\n        if (layer.latticeVectors.length >= 3){\n            return\n        }\n        let newVs = [...layer.latticeVectors]\n        newVs.push([0,0,0])\n        layer.latticeVectors = newVs\n        layers[idx] = layer\n        setLayers([...layers])\n    }\n\n    var set3Dimensions = (status, idx) => {\n        var layer = layers[idx]\n        layer.is3D = status\n        layers[idx] = layers\n        setLayers([...layers])\n    }\n\n    var removeLatticeVector = () => {\n        var layer = layers[idx]\n        if(layer.latticeVectors.length <= 0) {\n            return\n        }\n        let newVs = [...latticeVectors]\n        newVs.pop()\n        layer.latticeVectors = newVs\n        setLayers([...layers])\n    }\n\n    var modifyVector = (vectorIdx, component, event) => {\n        var layer = layers[idx]\n        layer.latticeVectors[vectorIdx][component] = event.target.value\n        layers[idx] = layer\n        setLayers([...layers])\n    }\n\n    return(\n        <div className=\"controlColumn\">\n            <div className=\"layerControl\">\n                {layers.map((elem, idx) => <LayerCard layer={elem} \n                    key = {idx}\n                    updateLayerProp={updateLayerProp}\n                    isOnEnds={idx == 0 || idx == layers.length-1} \n                    idx={idx}/>)}\n            </div>\n            <div style={{background:\"pink\", display:\"flex\", flexDirection:\"row\", alignItems:\"flex-end\"}}>\n                    <button className=\"controlBtns\" onClick={addLayer}>Add Layer</button>\n                    <button className=\"controlBtns\" onClick={removeLayer}>Remove Layer</button>\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}