{"ast":null,"code":"var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\n\nvar omit = flatRest(function (object, paths) {\n  var result = {};\n\n  if (object == null) {\n    return result;\n  }\n\n  var isDeep = false;\n  paths = arrayMap(paths, function (path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n\n  var length = paths.length;\n\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n\n  return result;\n});\nmodule.exports = omit;","map":{"version":3,"names":["arrayMap","require","baseClone","baseUnset","castPath","copyObject","customOmitClone","flatRest","getAllKeysIn","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","omit","object","paths","result","isDeep","path","length","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/lodash/omit.js"],"sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,cAAD,CADvB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,cAAD,CAFvB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAHtB;AAAA,IAIII,UAAU,GAAGJ,OAAO,CAAC,eAAD,CAJxB;AAAA,IAKIK,eAAe,GAAGL,OAAO,CAAC,oBAAD,CAL7B;AAAA,IAMIM,QAAQ,GAAGN,OAAO,CAAC,aAAD,CANtB;AAAA,IAOIO,YAAY,GAAGP,OAAO,CAAC,iBAAD,CAP1B;AASA;;;AACA,IAAIQ,eAAe,GAAG,CAAtB;AAAA,IACIC,eAAe,GAAG,CADtB;AAAA,IAEIC,kBAAkB,GAAG,CAFzB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAGL,QAAQ,CAAC,UAASM,MAAT,EAAiBC,KAAjB,EAAwB;EAC1C,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAIF,MAAM,IAAI,IAAd,EAAoB;IAClB,OAAOE,MAAP;EACD;;EACD,IAAIC,MAAM,GAAG,KAAb;EACAF,KAAK,GAAGd,QAAQ,CAACc,KAAD,EAAQ,UAASG,IAAT,EAAe;IACrCA,IAAI,GAAGb,QAAQ,CAACa,IAAD,EAAOJ,MAAP,CAAf;IACAG,MAAM,KAAKA,MAAM,GAAGC,IAAI,CAACC,MAAL,GAAc,CAA5B,CAAN;IACA,OAAOD,IAAP;EACD,CAJe,CAAhB;EAKAZ,UAAU,CAACQ,MAAD,EAASL,YAAY,CAACK,MAAD,CAArB,EAA+BE,MAA/B,CAAV;;EACA,IAAIC,MAAJ,EAAY;IACVD,MAAM,GAAGb,SAAS,CAACa,MAAD,EAASN,eAAe,GAAGC,eAAlB,GAAoCC,kBAA7C,EAAiEL,eAAjE,CAAlB;EACD;;EACD,IAAIY,MAAM,GAAGJ,KAAK,CAACI,MAAnB;;EACA,OAAOA,MAAM,EAAb,EAAiB;IACff,SAAS,CAACY,MAAD,EAASD,KAAK,CAACI,MAAD,CAAd,CAAT;EACD;;EACD,OAAOH,MAAP;AACD,CApBkB,CAAnB;AAsBAI,MAAM,CAACC,OAAP,GAAiBR,IAAjB"},"metadata":{},"sourceType":"script"}