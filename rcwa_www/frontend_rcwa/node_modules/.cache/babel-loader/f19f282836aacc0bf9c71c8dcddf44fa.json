{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","_interopRequireWildcard","require","_react","_interopRequireDefault","_reactDom","_reactLifecyclesCompat","_PropTypes","obj","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","i","length","indexOf","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Transition","_React$Component","props","context","_this","parentGroup","transitionGroup","appear","isMounting","enter","initialStatus","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_proto","getChildContext","getDerivedStateFromProps","_ref","prevState","nextIn","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","undefined","mounting","node","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","render","_this$props","children","childProps","child","Children","only","cloneElement","Component","contextTypes","object","childContextTypes","propTypes","process","env","NODE_ENV","oneOfType","func","isRequired","element","bool","pt","timeoutsShape","_len","arguments","args","Array","_key","apply","concat","noop","defaultProps","_default","polyfill"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/react-transition-group/Transition.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}