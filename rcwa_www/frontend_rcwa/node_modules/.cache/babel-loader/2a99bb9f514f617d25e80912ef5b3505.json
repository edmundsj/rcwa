{"ast":null,"code":"var baseEach = require('./_baseEach');\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\n\n\nfunction baseSome(collection, predicate) {\n  var result;\n  baseEach(collection, function (value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;","map":{"version":3,"names":["baseEach","require","baseSome","collection","predicate","result","value","index","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/lodash/_baseSome.js"],"sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBC,UAAlB,EAA8BC,SAA9B,EAAyC;EACvC,IAAIC,MAAJ;EAEAL,QAAQ,CAACG,UAAD,EAAa,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;IACtDE,MAAM,GAAGD,SAAS,CAACE,KAAD,EAAQC,KAAR,EAAeJ,UAAf,CAAlB;IACA,OAAO,CAACE,MAAR;EACD,CAHO,CAAR;EAIA,OAAO,CAAC,CAACA,MAAT;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBP,QAAjB"},"metadata":{},"sourceType":"script"}