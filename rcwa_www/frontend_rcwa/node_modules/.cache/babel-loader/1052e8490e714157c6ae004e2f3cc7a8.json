{"ast":null,"code":"import { ticks, tickIncrement } from \"d3-array\";\nimport continuous, { copy } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n\n      if (step === prestep) {\n        d[i0] = start;\n        d[i1] = stop;\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}","map":{"version":3,"names":["ticks","tickIncrement","continuous","copy","initRange","tickFormat","linearish","scale","domain","count","d","length","specifier","nice","i0","i1","start","stop","prestep","step","maxIter","Math","floor","ceil","linear","apply","arguments"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/d3-scale/src/linear.js"],"sourcesContent":["import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}