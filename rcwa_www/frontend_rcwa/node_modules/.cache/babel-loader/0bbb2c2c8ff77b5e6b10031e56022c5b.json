{"ast":null,"code":"import { InternSet } from \"internmap\";\nexport default function intersection(values) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  values = new InternSet(values);\n  others = others.map(set);\n\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}","map":{"version":3,"names":["InternSet","intersection","values","others","map","set","out","value","other","has","delete"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/d3-array/src/intersection.js"],"sourcesContent":["import {InternSet} from \"internmap\";\n\nexport default function intersection(values, ...others) {\n  values = new InternSet(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}\n"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,WAAxB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAAyC;EAAA,kCAARC,MAAQ;IAARA,MAAQ;EAAA;;EACtDD,MAAM,GAAG,IAAIF,SAAJ,CAAcE,MAAd,CAAT;EACAC,MAAM,GAAGA,MAAM,CAACC,GAAP,CAAWC,GAAX,CAAT;;EACAC,GAAG,EAAE,KAAK,MAAMC,KAAX,IAAoBL,MAApB,EAA4B;IAC/B,KAAK,MAAMM,KAAX,IAAoBL,MAApB,EAA4B;MAC1B,IAAI,CAACK,KAAK,CAACC,GAAN,CAAUF,KAAV,CAAL,EAAuB;QACrBL,MAAM,CAACQ,MAAP,CAAcH,KAAd;QACA,SAASD,GAAT;MACD;IACF;EACF;;EACD,OAAOJ,MAAP;AACD;;AAED,SAASG,GAAT,CAAaH,MAAb,EAAqB;EACnB,OAAOA,MAAM,YAAYF,SAAlB,GAA8BE,MAA9B,GAAuC,IAAIF,SAAJ,CAAcE,MAAd,CAA9C;AACD"},"metadata":{},"sourceType":"module"}