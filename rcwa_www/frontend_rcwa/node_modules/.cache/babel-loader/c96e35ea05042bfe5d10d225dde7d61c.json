{"ast":null,"code":"'use strict';\n\nvar AxiosError = require('../core/AxiosError');\n\nvar utils = require('../utils');\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\n\n\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\nmodule.exports = CanceledError;","map":{"version":3,"names":["AxiosError","require","utils","CanceledError","message","call","ERR_CANCELED","name","inherits","__CANCEL__","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/node_modules/axios/lib/cancel/CanceledError.js"],"sourcesContent":["'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;EAC9B;EACAJ,UAAU,CAACK,IAAX,CAAgB,IAAhB,EAAsBD,OAAO,IAAI,IAAX,GAAkB,UAAlB,GAA+BA,OAArD,EAA8DJ,UAAU,CAACM,YAAzE;EACA,KAAKC,IAAL,GAAY,eAAZ;AACD;;AAEDL,KAAK,CAACM,QAAN,CAAeL,aAAf,EAA8BH,UAA9B,EAA0C;EACxCS,UAAU,EAAE;AAD4B,CAA1C;AAIAC,MAAM,CAACC,OAAP,GAAiBR,aAAjB"},"metadata":{},"sourceType":"script"}