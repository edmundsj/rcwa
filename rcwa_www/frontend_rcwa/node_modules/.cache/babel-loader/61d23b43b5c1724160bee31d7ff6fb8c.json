{"ast":null,"code":"import { bisect } from \"d3-array\";\nimport { initRange } from \"./init.js\";\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return threshold().domain(domain).range(range).unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}","map":{"version":3,"names":["bisect","initRange","threshold","domain","range","unknown","n","scale","x","_","arguments","length","Array","from","Math","min","slice","invertExtent","y","i","indexOf","copy","apply"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/d3-scale/src/threshold.js"],"sourcesContent":["import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,SAAQC,SAAR,QAAwB,WAAxB;AAEA,eAAe,SAASC,SAAT,GAAqB;EAClC,IAAIC,MAAM,GAAG,CAAC,GAAD,CAAb;EAAA,IACIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,CADZ;EAAA,IAEIC,OAFJ;EAAA,IAGIC,CAAC,GAAG,CAHR;;EAKA,SAASC,KAAT,CAAeC,CAAf,EAAkB;IAChB,OAAOA,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAIA,CAAlB,GAAsBJ,KAAK,CAACJ,MAAM,CAACG,MAAD,EAASK,CAAT,EAAY,CAAZ,EAAeF,CAAf,CAAP,CAA3B,GAAuDD,OAA9D;EACD;;EAEDE,KAAK,CAACJ,MAAN,GAAe,UAASM,CAAT,EAAY;IACzB,OAAOC,SAAS,CAACC,MAAV,IAAoBR,MAAM,GAAGS,KAAK,CAACC,IAAN,CAAWJ,CAAX,CAAT,EAAwBH,CAAC,GAAGQ,IAAI,CAACC,GAAL,CAASZ,MAAM,CAACQ,MAAhB,EAAwBP,KAAK,CAACO,MAAN,GAAe,CAAvC,CAA5B,EAAuEJ,KAA3F,IAAoGJ,MAAM,CAACa,KAAP,EAA3G;EACD,CAFD;;EAIAT,KAAK,CAACH,KAAN,GAAc,UAASK,CAAT,EAAY;IACxB,OAAOC,SAAS,CAACC,MAAV,IAAoBP,KAAK,GAAGQ,KAAK,CAACC,IAAN,CAAWJ,CAAX,CAAR,EAAuBH,CAAC,GAAGQ,IAAI,CAACC,GAAL,CAASZ,MAAM,CAACQ,MAAhB,EAAwBP,KAAK,CAACO,MAAN,GAAe,CAAvC,CAA3B,EAAsEJ,KAA1F,IAAmGH,KAAK,CAACY,KAAN,EAA1G;EACD,CAFD;;EAIAT,KAAK,CAACU,YAAN,GAAqB,UAASC,CAAT,EAAY;IAC/B,IAAIC,CAAC,GAAGf,KAAK,CAACgB,OAAN,CAAcF,CAAd,CAAR;IACA,OAAO,CAACf,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAP,EAAgBhB,MAAM,CAACgB,CAAD,CAAtB,CAAP;EACD,CAHD;;EAKAZ,KAAK,CAACF,OAAN,GAAgB,UAASI,CAAT,EAAY;IAC1B,OAAOC,SAAS,CAACC,MAAV,IAAoBN,OAAO,GAAGI,CAAV,EAAaF,KAAjC,IAA0CF,OAAjD;EACD,CAFD;;EAIAE,KAAK,CAACc,IAAN,GAAa,YAAW;IACtB,OAAOnB,SAAS,GACXC,MADE,CACKA,MADL,EAEFC,KAFE,CAEIA,KAFJ,EAGFC,OAHE,CAGMA,OAHN,CAAP;EAID,CALD;;EAOA,OAAOJ,SAAS,CAACqB,KAAV,CAAgBf,KAAhB,EAAuBG,SAAvB,CAAP;AACD"},"metadata":{},"sourceType":"module"}