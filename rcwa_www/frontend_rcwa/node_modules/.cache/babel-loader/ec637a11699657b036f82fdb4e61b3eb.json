{"ast":null,"code":"import { epsilon } from \"../math.js\";\nimport { Cardinal } from \"./cardinal.js\";\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n\n        break;\n\n      case 3:\n        this.point(this._x2, this._y2);\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n      // falls through\n\n      default:\n        point(this, x, y);\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","map":{"version":3,"names":["epsilon","Cardinal","point","that","x","y","x1","_x1","y1","_y1","x2","_x2","y2","_y2","_l01_a","a","_l01_2a","_l12_a","_l12_2a","n","_x0","_y0","_l23_a","b","_l23_2a","m","_context","bezierCurveTo","CatmullRom","context","alpha","_alpha","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","lineTo","closePath","x23","y23","Math","sqrt","pow","moveTo","custom","catmullRom"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/d3-shape/src/curve/catmullRom.js"],"sourcesContent":["import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}