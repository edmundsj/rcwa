{"ast":null,"code":"var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","map":{"version":3,"names":["memoize","require","MAX_MEMOIZE_SIZE","memoizeCapped","func","result","key","cache","size","clear","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/lodash/_memoizeCapped.js"],"sourcesContent":["var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAEA;;;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,IAAIC,MAAM,GAAGL,OAAO,CAACI,IAAD,EAAO,UAASE,GAAT,EAAc;IACvC,IAAIC,KAAK,CAACC,IAAN,KAAeN,gBAAnB,EAAqC;MACnCK,KAAK,CAACE,KAAN;IACD;;IACD,OAAOH,GAAP;EACD,CALmB,CAApB;EAOA,IAAIC,KAAK,GAAGF,MAAM,CAACE,KAAnB;EACA,OAAOF,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBR,aAAjB"},"metadata":{},"sourceType":"script"}