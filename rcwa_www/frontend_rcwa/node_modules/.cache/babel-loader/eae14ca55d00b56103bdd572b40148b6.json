{"ast":null,"code":"var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\n\n\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;","map":{"version":3,"names":["castPath","require","last","parent","toKey","baseUnset","object","path","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/lodash/_baseUnset.js"],"sourcesContent":["var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CADlB;AAAA,IAEIE,MAAM,GAAGF,OAAO,CAAC,WAAD,CAFpB;AAAA,IAGIG,KAAK,GAAGH,OAAO,CAAC,UAAD,CAHnB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;EAC/BA,IAAI,GAAGP,QAAQ,CAACO,IAAD,EAAOD,MAAP,CAAf;EACAA,MAAM,GAAGH,MAAM,CAACG,MAAD,EAASC,IAAT,CAAf;EACA,OAAOD,MAAM,IAAI,IAAV,IAAkB,OAAOA,MAAM,CAACF,KAAK,CAACF,IAAI,CAACK,IAAD,CAAL,CAAN,CAAtC;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB"},"metadata":{},"sourceType":"script"}