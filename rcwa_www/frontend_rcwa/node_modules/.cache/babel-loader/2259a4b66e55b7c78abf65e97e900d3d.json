{"ast":null,"code":"var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;","map":{"version":3,"names":["identity","require","overRest","setToString","baseRest","func","start","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/lodash/_baseRest.js"],"sourcesContent":["var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CADtB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAFzB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;EAC7B,OAAOH,WAAW,CAACD,QAAQ,CAACG,IAAD,EAAOC,KAAP,EAAcN,QAAd,CAAT,EAAkCK,IAAI,GAAG,EAAzC,CAAlB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,QAAjB"},"metadata":{},"sourceType":"script"}