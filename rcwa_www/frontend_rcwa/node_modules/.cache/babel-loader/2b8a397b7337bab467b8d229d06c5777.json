{"ast":null,"code":"import { linearish } from \"./linear.js\";\nimport { copy, transformer } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function (x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function (x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1,\n      scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function (_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}","map":{"version":3,"names":["linearish","copy","transformer","initRange","transformSymlog","c","x","Math","sign","log1p","abs","transformSymexp","expm1","symlogish","transform","scale","constant","_","arguments","length","symlog","apply"],"sources":["/home/foglet15/Code/Python/rcwa/rcwa_www/frontend_rcwa/node_modules/d3-scale/src/symlog.js"],"sourcesContent":["import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,IAAR,EAAcC,WAAd,QAAgC,iBAAhC;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;EAC1B,OAAO,UAASC,CAAT,EAAY;IACjB,OAAOC,IAAI,CAACC,IAAL,CAAUF,CAAV,IAAeC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,GAAL,CAASJ,CAAC,GAAGD,CAAb,CAAX,CAAtB;EACD,CAFD;AAGD;;AAED,SAASM,eAAT,CAAyBN,CAAzB,EAA4B;EAC1B,OAAO,UAASC,CAAT,EAAY;IACjB,OAAOC,IAAI,CAACC,IAAL,CAAUF,CAAV,IAAeC,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACG,GAAL,CAASJ,CAAT,CAAX,CAAf,GAAyCD,CAAhD;EACD,CAFD;AAGD;;AAED,OAAO,SAASQ,SAAT,CAAmBC,SAAnB,EAA8B;EACnC,IAAIT,CAAC,GAAG,CAAR;EAAA,IAAWU,KAAK,GAAGD,SAAS,CAACV,eAAe,CAACC,CAAD,CAAhB,EAAqBM,eAAe,CAACN,CAAD,CAApC,CAA5B;;EAEAU,KAAK,CAACC,QAAN,GAAiB,UAASC,CAAT,EAAY;IAC3B,OAAOC,SAAS,CAACC,MAAV,GAAmBL,SAAS,CAACV,eAAe,CAACC,CAAC,GAAG,CAACY,CAAN,CAAhB,EAA0BN,eAAe,CAACN,CAAD,CAAzC,CAA5B,GAA4EA,CAAnF;EACD,CAFD;;EAIA,OAAOL,SAAS,CAACe,KAAD,CAAhB;AACD;AAED,eAAe,SAASK,MAAT,GAAkB;EAC/B,IAAIL,KAAK,GAAGF,SAAS,CAACX,WAAW,EAAZ,CAArB;;EAEAa,KAAK,CAACd,IAAN,GAAa,YAAW;IACtB,OAAOA,IAAI,CAACc,KAAD,EAAQK,MAAM,EAAd,CAAJ,CAAsBJ,QAAtB,CAA+BD,KAAK,CAACC,QAAN,EAA/B,CAAP;EACD,CAFD;;EAIA,OAAOb,SAAS,CAACkB,KAAV,CAAgBN,KAAhB,EAAuBG,SAAvB,CAAP;AACD"},"metadata":{},"sourceType":"module"}