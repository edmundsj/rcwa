{"ast":null,"code":"'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {}; // eslint-disable-next-line func-names\n\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\nvar deprecatedWarnings = {};\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\n\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  } // eslint-disable-next-line func-names\n\n\n  return function (value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), AxiosError.ERR_DEPRECATED);\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true; // eslint-disable-next-line no-console\n\n      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n\n  var keys = Object.keys(options);\n  var i = keys.length;\n\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n\n      continue;\n    }\n\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};","map":{"version":3,"names":["VERSION","require","version","AxiosError","validators","forEach","type","i","validator","thing","deprecatedWarnings","transitional","message","formatMessage","opt","desc","value","opts","ERR_DEPRECATED","console","warn","assertOptions","options","schema","allowUnknown","ERR_BAD_OPTION_VALUE","keys","Object","length","result","undefined","ERR_BAD_OPTION","module","exports"],"sources":["/home/foglet15/Code/Python/rcwa/node_modules/axios/lib/helpers/validator.js"],"sourcesContent":["'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}